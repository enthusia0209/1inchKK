{"version":3,"file":"index-BhwrGi2r.js","sources":["../../../../apps/dapp/src/app/elements/settings/settings.style.ts","../../../../apps/dapp/src/app/elements/settings/settings.view.ts","../../../../apps/dapp/src/app/elements/settings/settings.element.ts"],"sourcesContent":["import { css } from 'lit';\r\nimport { mobileMediaCSS } from '@one-inch-community/core/lit';\r\n\r\nexport const settingsStyle = css`\r\n    \r\n    :host {\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: relative;\r\n    }\r\n\r\n    .settings-view-item {\r\n        color: var(--color-content-content-primary);\r\n        font-size: 16px;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        line-height: 24px;\r\n        height: 64px;\r\n        width: 100%;\r\n        border-radius: 16px;\r\n        display: flex;\r\n        padding: 20px 16px;\r\n        box-sizing: border-box;\r\n        gap: 8px;\r\n        transition: background-color .2s;\r\n    }\r\n    \r\n    .main-settings-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: relative;\r\n        \r\n        gap: 8px;\r\n        height: fit-content;\r\n        width: 100%;\r\n        min-width: 300px;\r\n    }\r\n    \r\n    .segmented-control-container {\r\n        padding-top: 16px;\r\n        color: var(--color-content-content-primary);\r\n        font-size: 16px;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        line-height: 24px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 8px;\r\n    }\r\n    \r\n    .segmented-control-label {\r\n        padding-left: 16px;\r\n    }\r\n    \r\n    .theme-container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        color: var(--color-content-content-primary);\r\n        font-size: 16px;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        line-height: 24px;\r\n        gap: 16px;\r\n    }\r\n    \r\n    .theme-item {\r\n        border-radius: 16px;\r\n        padding: 16px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 16px;\r\n        background-color: var(--color-background-bg-secondary);\r\n        box-sizing: border-box;\r\n        transition: box-shadow .2s;\r\n    }\r\n    \r\n    .theme-item-select {\r\n        box-shadow: inset 0 0 0 1px var(--primary);\r\n    }\r\n    \r\n    @media (hover: hover) {\r\n        .settings-view-item:hover {\r\n            background-color: var(--color-background-bg-secondary);\r\n        }\r\n        \r\n        .theme-item:not(.theme-item-select):hover {\r\n            box-shadow: inset 0 0 0 1px var(--primary-50)\r\n        }\r\n    }\r\n\r\n    ${mobileMediaCSS(css`\r\n        .main-settings-container {\r\n            width: calc(100vw - 16px);\r\n        }\r\n    `)}\r\n`\r\n","import { html, LitElement } from 'lit';\r\nimport { SceneController } from '@one-inch-community/ui-components/scene';\r\nimport '@one-inch-community/ui-components/icon';\r\nimport '@one-inch-community/ui-components/card';\r\nimport '@one-inch-community/ui-components/segmented-control';\r\nimport type { SegmentedControlItem } from '@one-inch-community/ui-components/segmented-control';\r\nimport { BrandColors, IApplicationContext, Locale, MainColors } from '@one-inch-community/models';\r\nimport { dispatchEvent } from '@one-inch-community/core/lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\n\r\nexport function getMainSettingsView(scene: SceneController<string, string>, element: LitElement) {\r\n  return html`\r\n    <div class=\"main-settings-container\">\r\n      <inch-card-header\r\n        backButton\r\n        headerText=\"Settings\"\r\n        @backCard=\"${() => dispatchEvent(element, 'closeSettings', null)}\"\r\n      ></inch-card-header>\r\n      <div class=\"settings-view-container\">\r\n        ${getMainSettingsViewItem(scene, 'image24', 'Personalization', 'personalization')}\r\n        ${getMainSettingsViewItem(scene, 'globe24', 'Localization', 'localization')}\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n\r\nconst primaryColor: SegmentedControlItem[] = [\r\n  { value: BrandColors.community, label: 'community' },\r\n  { value: BrandColors.violet, label: 'violet' },\r\n  { value: BrandColors.random, label: 'random' },\r\n  { value: BrandColors.rainbow, label: 'rainbow' },\r\n]\r\n\r\nconst themes = [\r\n  { value: MainColors.systemSync, label: 'Automatic', icon: 'command24' },\r\n  { value: MainColors.dark, label: 'Dark', icon: 'moon24' },\r\n  { value: MainColors.light, label: 'light', icon: 'sun24' },\r\n]\r\n\r\nexport function getPersonalizationSettingsView(\r\n  scene: SceneController<string, string>,\r\n  applicationContext: IApplicationContext,\r\n  element: LitElement\r\n) {\r\n  return html`\r\n    <div class=\"main-settings-container\">\r\n      <inch-card-header\r\n        backButton\r\n        headerText=\"Personalization\"\r\n        @backCard=\"${() => scene.back()}\"\r\n      ></inch-card-header>\r\n      <div class=\"settings-view-container\">\r\n        <div class=\"theme-container\">\r\n          ${themes.map(item => {\r\n            const classes = {\r\n              'theme-item': true,\r\n              'theme-item-select': item.value === applicationContext.themesController.getActiveMainColor()\r\n            }\r\n            return html`\r\n            <div @click=\"${async (event: MouseEvent) => {\r\n              await applicationContext.themesController.onChangeMainColor(item.value, event)\r\n              element.requestUpdate()\r\n            }}\" class=\"${classMap(classes)}\">\r\n              <inch-icon icon=\"${item.icon}\"></inch-icon>\r\n              <span>${item.label}</span>\r\n            </div>\r\n          `\r\n          })}\r\n        </div>\r\n        <div class=\"segmented-control-container\">\r\n          <span class=\"segmented-control-label\">Primary color</span>\r\n          <inch-segmented-control\r\n            .items=\"${primaryColor}\"\r\n            .select=\"${primaryColor.find(item => item.value === applicationContext.themesController.getActiveBrandColor())}\"\r\n            @change=\"${(event: CustomEvent) => applicationContext.themesController.onChangeBrandColor(event.detail.value)}\"\r\n          ></inch-segmented-control>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n\r\nexport function getLocalizationSettingsView(scene: SceneController<string, string>, applicationContext: IApplicationContext) {\r\n  return html`\r\n    <div class=\"main-settings-container\">\r\n      <inch-card-header\r\n        backButton\r\n        headerText=\"Language\"\r\n        @backCard=\"${() => scene.back()}\"\r\n      ></inch-card-header>\r\n      <div class=\"settings-view-container\">\r\n        ${getLocalizationSettingsViewItem('English', Locale.en, applicationContext)}\r\n        ${getLocalizationSettingsViewItem('العربية', Locale.ar, applicationContext)}\r\n        ${getLocalizationSettingsViewItem('Deutsch', Locale.de, applicationContext)}\r\n        ${getLocalizationSettingsViewItem('français', Locale.fr, applicationContext)}\r\n        ${getLocalizationSettingsViewItem('Español', Locale.es, applicationContext)}\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n\r\nfunction getMainSettingsViewItem(\r\n  scene: SceneController<string, string>,\r\n  iconName: string,\r\n  nameView: string,\r\n  nextScene: string\r\n) {\r\n  return html`\r\n    <div class=\"settings-view-item\" @click=\"${() => scene.nextTo(nextScene)}\">\r\n      <inch-icon icon=\"${iconName}\"></inch-icon>\r\n      <span>${nameView}</span>\r\n    </div>\r\n  `\r\n}\r\n\r\nfunction getLocalizationSettingsViewItem(\r\n  nameView: string,\r\n  code: Locale,\r\n  applicationContext: IApplicationContext\r\n) {\r\n  return html`\r\n    <div class=\"settings-view-item\" @click=\"${() => applicationContext.i18nController.changeLocale(code)}\">\r\n      <span>${nameView}</span>\r\n    </div>\r\n  `\r\n}\r\n","import { html, LitElement } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\nimport { settingsStyle } from './settings.style';\r\nimport { SceneController, shiftAnimation } from '@one-inch-community/ui-components/scene';\r\nimport { getLocalizationSettingsView, getMainSettingsView, getPersonalizationSettingsView } from './settings.view';\r\nimport { consume } from '@lit/context';\r\nimport { ApplicationContextToken } from '@one-inch-community/core/application-context';\r\nimport { IApplicationContext, Locale } from '@one-inch-community/models';\r\nimport { getMobileMatchMediaAndSubscribe } from '@one-inch-community/core/lit';\r\n\r\nconst localeCount = Object.keys(Locale).length\r\nconst localizationHeight = 44 + 8 + (localeCount * 64)\r\n\r\n@customElement(Settings.tagName)\r\nexport class Settings extends LitElement {\r\n  static readonly tagName = 'inch-settings'\r\n\r\n  static override styles = settingsStyle\r\n\r\n  private readonly mobileMedia = getMobileMatchMediaAndSubscribe(this)\r\n\r\n  @consume({ context: ApplicationContextToken })\r\n  applicationContext!: IApplicationContext\r\n\r\n  private readonly scene = new SceneController('main', {\r\n    main: { minWidth: this.getWidth(), maxWidth: this.getWidth(), maxHeight: 180, minHeight: 180 },\r\n    personalization: { minWidth: this.getWidth(), maxWidth: this.getWidth(), maxHeight: 240, minHeight: 240 },\r\n    localization: { minWidth: this.getWidth(), maxWidth: this.getWidth(), maxHeight: localizationHeight, minHeight: localizationHeight }\r\n  }, shiftAnimation())\r\n\r\n  protected render() {\r\n    return html`\r\n      <div class=\"settings-scene-container\">\r\n        ${this.scene.render({\r\n          main: () => getMainSettingsView(this.scene, this),\r\n          personalization: () => getPersonalizationSettingsView(this.scene, this.applicationContext, this),\r\n          localization: () => getLocalizationSettingsView(this.scene, this.applicationContext),\r\n        })}\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private getWidth() {\r\n    if (this.mobileMedia.matches) return window.innerWidth - 16\r\n    return 556\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'inch-settings': Settings\r\n  }\r\n}\r\n"],"names":["settingsStyle","css","mobileMediaCSS","getMainSettingsView","scene","element","html","dispatchEvent","getMainSettingsViewItem","primaryColor","BrandColors","themes","MainColors","getPersonalizationSettingsView","applicationContext","item","classes","event","classMap","getLocalizationSettingsView","getLocalizationSettingsViewItem","Locale","iconName","nameView","nextScene","code","localeCount","localizationHeight","Settings","LitElement","getMobileMatchMediaAndSubscribe","SceneController","shiftAnimation","__decorateClass","consume","ApplicationContextToken","customElement"],"mappings":"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"}