{"version":3,"mappings":"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","names":["__vitePreload","SwapFormDesktopElement","LitElement","OverlayController","SceneController","subscribe","getThemeChange","map","brandColor","distinctUntilChanged","tap","color","BrandColors","classes","html","classMap","event","when","swapSnapshot","id","swapFormStyle","__decorateClass","consume","SwapContextToken","ApplicationContextToken","state","customElement"],"ignoreList":[],"sources":["../../../../apps/dapp/src/app/elements/swap-form/swap-form-desktop.element.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\r\nimport { customElement, state } from 'lit/decorators.js';\r\nimport { consume } from '@lit/context';\r\nimport { SwapContextToken } from '@one-inch-community/sdk/swap';\r\nimport { BrandColors, IApplicationContext, ISwapContext, SwapSnapshot, TokenType } from '@one-inch-community/models';\r\nimport { ApplicationContextToken } from '@one-inch-community/core/application-context';\r\nimport { SceneController } from '@one-inch-community/ui-components/scene';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { when } from 'lit/directives/when.js';\r\nimport { OverlayController } from '@one-inch-community/ui-components/overlay';\r\nimport { swapFormStyle } from './swap-form.style';\r\n\r\nimport '@one-inch-community/ui-components/card';\r\nimport '@one-inch-community/ui-components/button';\r\nimport '@one-inch-community/widgets/swap-form';\r\nimport { subscribe } from '@one-inch-community/core/lit';\r\nimport { getThemeChange } from '@one-inch-community/core/theme';\r\nimport { distinctUntilChanged, map, tap } from 'rxjs';\r\n\r\nimport('@one-inch-community/widgets/wallet-manage');\r\nimport('@one-inch-community/widgets/select-token');\r\nimport('@one-inch-community/ui-components/icon');\r\nimport('../settings');\r\n\r\n@customElement(SwapFormDesktopElement.tagName)\r\nexport class SwapFormDesktopElement extends LitElement {\r\n  static readonly tagName = 'inch-swap-form-desktop' as const;\r\n\r\n  static styles = [\r\n    swapFormStyle,\r\n    SceneController.styles()\r\n  ];\r\n\r\n  @consume({ context: SwapContextToken })\r\n  swapContext!: ISwapContext\r\n\r\n  @consume({ context: ApplicationContextToken })\r\n  applicationContext!: IApplicationContext\r\n\r\n  @state() private isRainbowTheme = false;\r\n\r\n  private targetSelectToken: TokenType | null = null;\r\n\r\n  private swapSnapshot: SwapSnapshot | null = null;\r\n\r\n  private readonly overlay = new OverlayController('app-root', 'center');\r\n\r\n  private readonly desktopScene = new SceneController('swapForm', {\r\n    swapForm: { minWidth: 556, maxWidth: 556, maxHeight: 625, lazyRender: true },\r\n    selectToken: { minWidth: 556, maxWidth: 556, maxHeight: 680 },\r\n    confirmSwap: { minWidth: 556, maxWidth: 556, maxHeight: 680 },\r\n    settings: { minWidth: 556, maxWidth: 556, maxHeight: 900, lazyRender: true },\r\n  });\r\n\r\n  protected firstUpdated() {\r\n    subscribe(this, [\r\n      getThemeChange().pipe(\r\n        map(({ brandColor }) => brandColor),\r\n        distinctUntilChanged(),\r\n        tap(color => this.isRainbowTheme = color === BrandColors.rainbow)\r\n      ),\r\n    ], { requestUpdate: false });\r\n  }\r\n\r\n  protected render() {\r\n    const classes = {\r\n      'shadow-container': true,\r\n      'shadow-container-rainbow': this.isRainbowTheme\r\n    };\r\n    return html`\r\n      <div class=\"${classMap(classes)}\">\r\n        <inch-card>\r\n          ${this.desktopScene.render({\r\n            swapForm: () => html`\r\n              <inch-swap-form\r\n                @confirmSwap=\"${(event: CustomEvent) => this.onOpenConfirmSwap(event)}\"\r\n                @changeChain=\"${() => this.onOpenChangeChainView()}\"\r\n                @openTokenSelector=\"${(event: CustomEvent) => this.onOpenSelectToken(event)}\"\r\n                @connectWallet=\"${() => this.onOpenConnectWalletView()}\"\r\n              >\r\n                <div slot=\"header\">\r\n                  <inch-button @click=\"${() => this.desktopScene.nextTo('settings')}\" type=\"tertiary-gray\" size=\"l\">\r\n                    <inch-icon icon=\"settings24\"></inch-icon>\r\n                  </inch-button>\r\n                </div>\r\n              </inch-swap-form>\r\n            `,\r\n            selectToken: () => html`\r\n              <inch-select-token\r\n                tokenType=\"${this.targetSelectToken!}\"\r\n                @backCard=\"${() => this.desktopScene.back()}\"\r\n              ></inch-select-token>\r\n            `,\r\n            confirmSwap: () => when(this.swapSnapshot, (swapSnapshot) => html`\r\n              <inch-confirm-swap\r\n                .swapSnapshot=\"${swapSnapshot as any}\"\r\n                @backCard=\"${async () => {\r\n                  await this.desktopScene.back();\r\n                  this.swapSnapshot = null;\r\n                }}\"\r\n              ></inch-confirm-swap>\r\n            `),\r\n            settings: () => html`\r\n              <inch-settings\r\n                @closeSettings=\"${() => this.desktopScene.back()}\"\r\n              ></inch-settings>\r\n            `\r\n          })}\r\n        </inch-card>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private async onOpenSelectToken(event: CustomEvent) {\r\n    this.targetSelectToken = event.detail.value;\r\n    await this.desktopScene.nextTo('selectToken');\r\n  }\r\n\r\n  private async onOpenConfirmSwap(event: CustomEvent) {\r\n    this.swapSnapshot = event.detail.value;\r\n    await this.desktopScene.nextTo('confirmSwap');\r\n  }\r\n\r\n  private async onOpenChangeChainView() {\r\n    const id = await this.overlay.open(html`\r\n      <inch-chain-selector-list\r\n        showShadow\r\n        @closeCard=\"${() => this.overlay.close(id)}\"\r\n        .controller=\"${this.applicationContext.connectWalletController}\"\r\n      ></inch-chain-selector-list>\r\n    `);\r\n  }\r\n\r\n  private async onOpenConnectWalletView() {\r\n    const id = await this.overlay.open(html`\r\n      <inch-wallet-manage\r\n        showShadow\r\n        @closeCard=\"${() => this.overlay.close(id)}\"\r\n        .controller=\"${this.applicationContext.connectWalletController}\"\r\n      ></inch-wallet-manage>\r\n    `);\r\n  }\r\n\r\n}\r\n"],"file":"assets/swap-form-desktop.element-DHaqmCTz.js"}